{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASAA\\\\Desktop\\\\Task\\\\use-mapbox-gl-js-with-react\\\\src\\\\App.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\n// mapboxgl.accessToken = 'pk.eyJ1IjoibWVobW9vZDk1MDEiLCJhIjoiY2xoZWl3Z2wyMHpyeTNncnBuaXFkdHFvNCJ9.Mr6A8qVIFGTrM3f8cVIH7A';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  // const [latitude, setLatitude] = useState('');\n  // useEffect(() => {\n  //     const map = new mapboxgl.Map({\n  //       container: 'map',\n  //       style: 'mapbox://styles/mapbox/streets-v12',\n  //       center: [17.5, 4.5], // Centered on Africa\n  //       zoom: 3 // Zoomed out to show Africa\n  //     });\n  //     map.on('load', function() {\n  //       map.addSource('african-countries', {\n  //         type: 'geojson',\n  //         data: 'use-mapbox-gl-js-with-react/GeoJsons/africa-outline-with-countries_6.geojson'\n  //       });\n\n  //       // Add a layer to display the countries\n  //       map.addLayer({\n  //         id: 'african-countries-layer',\n  //         type: 'fill',\n  //         source: 'african-countries',\n  //         paint: {\n  //           'fill-color': '#0080ff',\n  //           'fill-opacity': 0.5\n  //         }\n  //       });\n  //     });\n  //     map.on('click', function(e) {\n  //       var features = map.queryRenderedFeatures(e.point, {\n  //         layers: ['african-countries-layer']\n  //       });\n\n  //       if (!features.length) {\n  //         return;\n  //       }\n\n  //       var feature = features[0];\n  //       var countryName = feature.properties.name;\n\n  //       // Do something with the country name, e.g. show it in an alert dialog\n  //       alert(countryName);\n  //     });\n  class Map extends React.Component {\n    constructor(props) {\n      super(props);\n      this.mapContainer = /*#__PURE__*/React.createRef();\n    }\n    componentDidMount() {\n      mapboxgl.accessToken = 'pk.eyJ1IjoibWVobW9vZDk1MDEiLCJhIjoiY2xoZWl3Z2wyMHpyeTNncnBuaXFkdHFvNCJ9.Mr6A8qVIFGTrM3f8cVIH7A';\n      this.map = new mapboxgl.Map({\n        container: this.mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [0, 0],\n        zoom: 2\n      });\n      this.map.on('load', () => {\n        this.map.addSource('african-countries', {\n          type: 'geojson',\n          data: 'use-mapbox-gl-js-with-react/GeoJsons/africa-outline-with-countries_6.geojson'\n        });\n        this.map.addLayer({\n          id: 'african-countries-layer',\n          type: 'fill',\n          source: 'african-countries',\n          paint: {\n            'fill-color': '#0080ff',\n            'fill-opacity': 0.5\n          }\n        });\n        this.map.on('click', 'african-countries-layer', e => {\n          var countryName = e.features[0].properties.name;\n          alert(countryName);\n        });\n      });\n    }\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.mapContainer,\n        style: {\n          width: '100%',\n          height: '500px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n  //       });\n  //       return (\n  //         <div>\n  //           <div id=\"map\" className=\"map-container\" />\n  //           {/* {latitude && <p>Latitude: {latitude}</p>} */}\n  //         </div>\n  //       );\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mapboxgl","jsxDEV","_jsxDEV","App","Map","Component","constructor","props","mapContainer","createRef","componentDidMount","accessToken","map","container","current","style","center","zoom","on","addSource","type","data","addLayer","id","source","paint","e","countryName","features","properties","name","alert","render","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASAA/Desktop/Task/use-mapbox-gl-js-with-react/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\n// mapboxgl.accessToken = 'pk.eyJ1IjoibWVobW9vZDk1MDEiLCJhIjoiY2xoZWl3Z2wyMHpyeTNncnBuaXFkdHFvNCJ9.Mr6A8qVIFGTrM3f8cVIH7A';\r\n\r\nexport default function App() {\r\n    // const [latitude, setLatitude] = useState('');\r\n    // useEffect(() => {\r\n    //     const map = new mapboxgl.Map({\r\n    //       container: 'map',\r\n    //       style: 'mapbox://styles/mapbox/streets-v12',\r\n    //       center: [17.5, 4.5], // Centered on Africa\r\n    //       zoom: 3 // Zoomed out to show Africa\r\n    //     });\r\n    //     map.on('load', function() {\r\n    //       map.addSource('african-countries', {\r\n    //         type: 'geojson',\r\n    //         data: 'use-mapbox-gl-js-with-react/GeoJsons/africa-outline-with-countries_6.geojson'\r\n    //       });\r\n        \r\n    //       // Add a layer to display the countries\r\n    //       map.addLayer({\r\n    //         id: 'african-countries-layer',\r\n    //         type: 'fill',\r\n    //         source: 'african-countries',\r\n    //         paint: {\r\n    //           'fill-color': '#0080ff',\r\n    //           'fill-opacity': 0.5\r\n    //         }\r\n    //       });\r\n    //     });\r\n    //     map.on('click', function(e) {\r\n    //       var features = map.queryRenderedFeatures(e.point, {\r\n    //         layers: ['african-countries-layer']\r\n    //       });\r\n        \r\n    //       if (!features.length) {\r\n    //         return;\r\n    //       }\r\n        \r\n    //       var feature = features[0];\r\n    //       var countryName = feature.properties.name;\r\n          \r\n    //       // Do something with the country name, e.g. show it in an alert dialog\r\n    //       alert(countryName);\r\n    //     });\r\n    class Map extends React.Component {\r\n      constructor(props) {\r\n        super(props);\r\n        this.mapContainer = React.createRef();\r\n      }\r\n    \r\n      componentDidMount() {\r\n        mapboxgl.accessToken = 'pk.eyJ1IjoibWVobW9vZDk1MDEiLCJhIjoiY2xoZWl3Z2wyMHpyeTNncnBuaXFkdHFvNCJ9.Mr6A8qVIFGTrM3f8cVIH7A';\r\n        this.map = new mapboxgl.Map({\r\n          container: this.mapContainer.current,\r\n          style: 'mapbox://styles/mapbox/streets-v12',\r\n          center: [0, 0],\r\n          zoom: 2\r\n        });\r\n    \r\n        this.map.on('load', () => {\r\n          this.map.addSource('african-countries', {\r\n            type: 'geojson',\r\n            data: 'use-mapbox-gl-js-with-react/GeoJsons/africa-outline-with-countries_6.geojson'\r\n          });\r\n    \r\n          this.map.addLayer({\r\n            id: 'african-countries-layer',\r\n            type: 'fill',\r\n            source: 'african-countries',\r\n            paint: {\r\n              'fill-color': '#0080ff',\r\n              'fill-opacity': 0.5\r\n            }\r\n          });\r\n    \r\n          this.map.on('click', 'african-countries-layer', (e) => {\r\n            var countryName = e.features[0].properties.name;\r\n            alert(countryName);\r\n          });\r\n        });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div\r\n            ref={this.mapContainer}\r\n            style={{ width: '100%', height: '500px' }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    \r\n//       });\r\n//       return (\r\n//         <div>\r\n//           <div id=\"map\" className=\"map-container\" />\r\n//           {/* {latitude && <p>Latitude: {latitude}</p>} */}\r\n//         </div>\r\n//       );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA,MAAMC,GAAG,SAASR,KAAK,CAACS,SAAS,CAAC;IAChCC,WAAWA,CAACC,KAAK,EAAE;MACjB,KAAK,CAACA,KAAK,CAAC;MACZ,IAAI,CAACC,YAAY,gBAAGZ,KAAK,CAACa,SAAS,CAAC,CAAC;IACvC;IAEAC,iBAAiBA,CAAA,EAAG;MAClBV,QAAQ,CAACW,WAAW,GAAG,gGAAgG;MACvH,IAAI,CAACC,GAAG,GAAG,IAAIZ,QAAQ,CAACI,GAAG,CAAC;QAC1BS,SAAS,EAAE,IAAI,CAACL,YAAY,CAACM,OAAO;QACpCC,KAAK,EAAE,oCAAoC;QAC3CC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,IAAI,CAACL,GAAG,CAACM,EAAE,CAAC,MAAM,EAAE,MAAM;QACxB,IAAI,CAACN,GAAG,CAACO,SAAS,CAAC,mBAAmB,EAAE;UACtCC,IAAI,EAAE,SAAS;UACfC,IAAI,EAAE;QACR,CAAC,CAAC;QAEF,IAAI,CAACT,GAAG,CAACU,QAAQ,CAAC;UAChBC,EAAE,EAAE,yBAAyB;UAC7BH,IAAI,EAAE,MAAM;UACZI,MAAM,EAAE,mBAAmB;UAC3BC,KAAK,EAAE;YACL,YAAY,EAAE,SAAS;YACvB,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACb,GAAG,CAACM,EAAE,CAAC,OAAO,EAAE,yBAAyB,EAAGQ,CAAC,IAAK;UACrD,IAAIC,WAAW,GAAGD,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACC,UAAU,CAACC,IAAI;UAC/CC,KAAK,CAACJ,WAAW,CAAC;QACpB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEAK,MAAMA,CAAA,EAAG;MACP,oBACE9B,OAAA;QACE+B,GAAG,EAAE,IAAI,CAACzB,YAAa;QACvBO,KAAK,EAAE;UAAEmB,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAQ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAEN;EACF;;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AAACC,EAAA,GAhGuBrC,GAAG;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}