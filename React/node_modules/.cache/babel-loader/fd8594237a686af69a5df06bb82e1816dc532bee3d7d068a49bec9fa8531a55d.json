{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASAA\\\\Desktop\\\\Task\\\\use-mapbox-gl-js-with-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoibWVobW9vZDk1MDEiLCJhIjoiY2xoZWl3Z2wyMHpyeTNncnBuaXFkdHFvNCJ9.Mr6A8qVIFGTrM3f8cVIH7A';\nexport default function App() {\n  _s();\n  const [latitude, setLatitude] = useState('');\n  useEffect(() => {\n    // const map = new mapboxgl.Map({\n    //   container: 'map',\n    //   style: 'mapbox://styles/mehmood9501/clhek9r3w018u01pg7nf23upk',\n    //   center: [17.5, 4.5], // Centered on Africa\n    //   zoom: 3 // Zoomed out to show Africa\n    // });\n    // map.on('load', function() {\n    //   map.addSource('african-countries', {\n    //     type: 'geojson',\n    //     data: 'https://cartographyvectors.com/map/6-africa-outline-with-countries'\n    //   });\n\n    //   // Add a layer to display the countries\n    //   map.addLayer({\n    //     id: 'african-countries-layer',\n    //     type: 'fill',\n    //     source: 'african-countries',\n    //     paint: {\n    //       'fill-color': '#0080ff',\n    //       'fill-opacity': 0.5\n    //     }\n    //   });\n    // });\n    // map.on('click', function(e) {\n    //   var features = map.queryRenderedFeatures(e.point, {\n    //     layers: ['african-countries-layer']\n    //   });\n\n    //   if (!features.length) {\n    //     return;\n    //   }\n\n    //   var feature = features[0];\n    //   var countryName = feature.properties.name;\n\n    //   // Do something with the country name, e.g. show it in an alert dialog\n    //   alert(countryName);\n    // });\n    mapboxgl.accessToken = 'YOUR_ACCESS_TOKEN';\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mehmood9501/clhek9r3w018u01pg7nf23upk',\n      center: [0, 0],\n      zoom: 2\n    });\n    var tileLayer = new mapboxgl.TileLayer({\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      attribution: 'Map data &copy; OpenStreetMap contributors'\n    });\n    map.on('load', function () {\n      map.addLayer(tileLayer, 'waterway-label');\n    });\n    var africanCountriesSource = new mapboxgl.GeoJSONSource({\n      url: 'YOUR_GEOJSON_DATA_URL'\n    });\n    map.on('load', function () {\n      map.addSource('african-countries', africanCountriesSource);\n\n      // Add a layer to display the countries\n      map.addLayer({\n        id: 'african-countries-layer',\n        type: 'fill',\n        source: 'african-countries',\n        paint: {\n          'fill-color': '#0080ff',\n          'fill-opacity': 0.5\n        }\n      });\n    });\n    map.on('click', function (e) {\n      var features = map.queryRenderedFeatures(e.point, {\n        layers: ['african-countries-layer']\n      });\n      if (!features.length) {\n        return;\n      }\n      var feature = features[0];\n      var countryName = feature.properties.name;\n\n      // Do something with the country name, e.g. show it in an alert dialog\n      alert(countryName);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this), latitude && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitude: \", latitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"HxauUsnwwrwtLUwtrAge4xauDXE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mapboxgl","jsxDEV","_jsxDEV","accessToken","App","_s","latitude","setLatitude","map","Map","container","style","center","zoom","tileLayer","TileLayer","url","attribution","on","addLayer","africanCountriesSource","GeoJSONSource","addSource","id","type","source","paint","e","features","queryRenderedFeatures","point","layers","length","feature","countryName","properties","name","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASAA/Desktop/Task/use-mapbox-gl-js-with-react/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWVobW9vZDk1MDEiLCJhIjoiY2xoZWl3Z2wyMHpyeTNncnBuaXFkdHFvNCJ9.Mr6A8qVIFGTrM3f8cVIH7A';\r\n\r\nexport default function App() {\r\n    const [latitude, setLatitude] = useState('');\r\n    useEffect(() => {\r\n        // const map = new mapboxgl.Map({\r\n        //   container: 'map',\r\n        //   style: 'mapbox://styles/mehmood9501/clhek9r3w018u01pg7nf23upk',\r\n        //   center: [17.5, 4.5], // Centered on Africa\r\n        //   zoom: 3 // Zoomed out to show Africa\r\n        // });\r\n        // map.on('load', function() {\r\n        //   map.addSource('african-countries', {\r\n        //     type: 'geojson',\r\n        //     data: 'https://cartographyvectors.com/map/6-africa-outline-with-countries'\r\n        //   });\r\n        \r\n        //   // Add a layer to display the countries\r\n        //   map.addLayer({\r\n        //     id: 'african-countries-layer',\r\n        //     type: 'fill',\r\n        //     source: 'african-countries',\r\n        //     paint: {\r\n        //       'fill-color': '#0080ff',\r\n        //       'fill-opacity': 0.5\r\n        //     }\r\n        //   });\r\n        // });\r\n        // map.on('click', function(e) {\r\n        //   var features = map.queryRenderedFeatures(e.point, {\r\n        //     layers: ['african-countries-layer']\r\n        //   });\r\n        \r\n        //   if (!features.length) {\r\n        //     return;\r\n        //   }\r\n        \r\n        //   var feature = features[0];\r\n        //   var countryName = feature.properties.name;\r\n          \r\n        //   // Do something with the country name, e.g. show it in an alert dialog\r\n        //   alert(countryName);\r\n        // });\r\n        mapboxgl.accessToken = 'YOUR_ACCESS_TOKEN';\r\n        var map = new mapboxgl.Map({\r\n          container: 'map',\r\n          style: 'mapbox://styles/mehmood9501/clhek9r3w018u01pg7nf23upk',\r\n          center: [0, 0],\r\n          zoom: 2\r\n        });\r\n\r\n        var tileLayer = new mapboxgl.TileLayer({\r\n          url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n          attribution: 'Map data &copy; OpenStreetMap contributors'\r\n        });\r\n\r\n        map.on('load', function() {\r\n          map.addLayer(tileLayer, 'waterway-label');\r\n        });\r\n        var africanCountriesSource = new mapboxgl.GeoJSONSource({\r\n          url: 'YOUR_GEOJSON_DATA_URL'\r\n        });\r\n        \r\n        map.on('load', function() {\r\n          map.addSource('african-countries', africanCountriesSource);\r\n        \r\n          // Add a layer to display the countries\r\n          map.addLayer({\r\n            id: 'african-countries-layer',\r\n            type: 'fill',\r\n            source: 'african-countries',\r\n            paint: {\r\n              'fill-color': '#0080ff',\r\n              'fill-opacity': 0.5\r\n            }\r\n          });\r\n        });\r\n        map.on('click', function(e) {\r\n          var features = map.queryRenderedFeatures(e.point, {\r\n            layers: ['african-countries-layer']\r\n          });\r\n        \r\n          if (!features.length) {\r\n            return;\r\n          }\r\n        \r\n          var feature = features[0];\r\n          var countryName = feature.properties.name;\r\n          \r\n          // Do something with the country name, e.g. show it in an alert dialog\r\n          alert(countryName);\r\n        });\r\n        \r\n      });\r\n      return (\r\n        <div>\r\n          <div id=\"map\" className=\"map-container\" />\r\n          {latitude && <p>Latitude: {latitude}</p>}\r\n        </div>\r\n      );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}