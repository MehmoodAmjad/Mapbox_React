{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASAA\\\\Desktop\\\\Task\\\\use-mapbox-gl-js-with-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoibWVobW9vZDk1MDEiLCJhIjoiY2xoZWl3Z2wyMHpyeTNncnBuaXFkdHFvNCJ9.Mr6A8qVIFGTrM3f8cVIH7A';\nexport default function App() {\n  _s();\n  const [latitude, setLatitude] = useState('');\n  useEffect(() => {\n    // const map = new mapboxgl.Map({\n    //   container: 'map',\n    //   style: 'mapbox://styles/mehmood9501/clhek9r3w018u01pg7nf23upk',\n    //   center: [17.5, 4.5], // Centered on Africa\n    //   zoom: 3 // Zoomed out to show Africa\n    // });\n    // map.on('load', function() {\n    //   map.addSource('african-countries', {\n    //     type: 'geojson',\n    //     data: 'https://cartographyvectors.com/map/6-africa-outline-with-countries'\n    //   });\n\n    //   // Add a layer to display the countries\n    //   map.addLayer({\n    //     id: 'african-countries-layer',\n    //     type: 'fill',\n    //     source: 'african-countries',\n    //     paint: {\n    //       'fill-color': '#0080ff',\n    //       'fill-opacity': 0.5\n    //     }\n    //   });\n    // });\n    // map.on('click', function(e) {\n    //   var features = map.queryRenderedFeatures(e.point, {\n    //     layers: ['african-countries-layer']\n    //   });\n\n    //   if (!features.length) {\n    //     return;\n    //   }\n\n    //   var feature = features[0];\n    //   var countryName = feature.properties.name;\n\n    //   // Do something with the country name, e.g. show it in an alert dialog\n    //   alert(countryName);\n    // });\n    mapboxgl.accessToken = 'YOUR_ACCESS_TOKEN';\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mehmood9501/clhek9r3w018u01pg7nf23upk',\n      center: [0, 0],\n      zoom: 2\n    });\n    var tileLayer = {\n      type: 'raster',\n      tiles: ['https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'],\n      tileSize: 256,\n      attribution: 'Map data &copy; OpenStreetMap contributors',\n      maxZoom: 18\n    };\n    map.on('load', function () {\n      map.addSource('tile-layer', {\n        type: 'raster',\n        tiles: [tileLayer.tiles],\n        tileSize: tileLayer.tileSize,\n        attribution: tileLayer.attribution,\n        maxzoom: tileLayer.maxZoom\n      });\n      map.addLayer({\n        id: 'tile-layer-layer',\n        type: 'raster',\n        source: 'tile-layer'\n      });\n    });\n    map.on('load', function () {\n      map.addLayer(tileLayer, 'waterway-label');\n    });\n    var africanCountriesSource = new mapboxgl.GeoJSONSource({\n      url: 'use-mapbox-gl-js-with-react\\GeoJsons\\africa-outline-with-countries_6.geojson'\n    });\n    map.on('load', function () {\n      map.addSource('african-countries', africanCountriesSource);\n\n      // Add a layer to display the countries\n      map.addLayer({\n        id: 'african-countries-layer',\n        type: 'fill',\n        source: 'african-countries',\n        paint: {\n          'fill-color': '#0080ff',\n          'fill-opacity': 0.5\n        }\n      });\n    });\n    map.on('click', function (e) {\n      var features = map.queryRenderedFeatures(e.point, {\n        layers: ['african-countries-layer']\n      });\n      if (!features.length) {\n        return;\n      }\n      var feature = features[0];\n      var countryName = feature.properties.name;\n\n      // Do something with the country name, e.g. show it in an alert dialog\n      alert(countryName);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }, this), latitude && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitude: \", latitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"HxauUsnwwrwtLUwtrAge4xauDXE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mapboxgl","jsxDEV","_jsxDEV","accessToken","App","_s","latitude","setLatitude","map","Map","container","style","center","zoom","tileLayer","type","tiles","tileSize","attribution","maxZoom","on","addSource","maxzoom","addLayer","id","source","africanCountriesSource","GeoJSONSource","url","paint","e","features","queryRenderedFeatures","point","layers","length","feature","countryName","properties","name","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASAA/Desktop/Task/use-mapbox-gl-js-with-react/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWVobW9vZDk1MDEiLCJhIjoiY2xoZWl3Z2wyMHpyeTNncnBuaXFkdHFvNCJ9.Mr6A8qVIFGTrM3f8cVIH7A';\r\n\r\nexport default function App() {\r\n    const [latitude, setLatitude] = useState('');\r\n    useEffect(() => {\r\n        // const map = new mapboxgl.Map({\r\n        //   container: 'map',\r\n        //   style: 'mapbox://styles/mehmood9501/clhek9r3w018u01pg7nf23upk',\r\n        //   center: [17.5, 4.5], // Centered on Africa\r\n        //   zoom: 3 // Zoomed out to show Africa\r\n        // });\r\n        // map.on('load', function() {\r\n        //   map.addSource('african-countries', {\r\n        //     type: 'geojson',\r\n        //     data: 'https://cartographyvectors.com/map/6-africa-outline-with-countries'\r\n        //   });\r\n        \r\n        //   // Add a layer to display the countries\r\n        //   map.addLayer({\r\n        //     id: 'african-countries-layer',\r\n        //     type: 'fill',\r\n        //     source: 'african-countries',\r\n        //     paint: {\r\n        //       'fill-color': '#0080ff',\r\n        //       'fill-opacity': 0.5\r\n        //     }\r\n        //   });\r\n        // });\r\n        // map.on('click', function(e) {\r\n        //   var features = map.queryRenderedFeatures(e.point, {\r\n        //     layers: ['african-countries-layer']\r\n        //   });\r\n        \r\n        //   if (!features.length) {\r\n        //     return;\r\n        //   }\r\n        \r\n        //   var feature = features[0];\r\n        //   var countryName = feature.properties.name;\r\n          \r\n        //   // Do something with the country name, e.g. show it in an alert dialog\r\n        //   alert(countryName);\r\n        // });\r\n        mapboxgl.accessToken = 'YOUR_ACCESS_TOKEN';\r\n        var map = new mapboxgl.Map({\r\n          container: 'map',\r\n          style: 'mapbox://styles/mehmood9501/clhek9r3w018u01pg7nf23upk',\r\n          center: [0, 0],\r\n          zoom: 2\r\n        });\r\n\r\n        var tileLayer = {\r\n          type: 'raster',\r\n          tiles: ['https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'],\r\n          tileSize: 256,\r\n          attribution: 'Map data &copy; OpenStreetMap contributors',\r\n          maxZoom: 18\r\n        };\r\n        \r\n        map.on('load', function() {\r\n          map.addSource('tile-layer', {\r\n            type: 'raster',\r\n            tiles: [tileLayer.tiles],\r\n            tileSize: tileLayer.tileSize,\r\n            attribution: tileLayer.attribution,\r\n            maxzoom: tileLayer.maxZoom\r\n          });\r\n        \r\n          map.addLayer({\r\n            id: 'tile-layer-layer',\r\n            type: 'raster',\r\n            source: 'tile-layer'\r\n          });\r\n        });\r\n        map.on('load', function() {\r\n          map.addLayer(tileLayer, 'waterway-label');\r\n        });\r\n        var africanCountriesSource = new mapboxgl.GeoJSONSource({\r\n          url: 'use-mapbox-gl-js-with-react\\GeoJsons\\africa-outline-with-countries_6.geojson'\r\n        });\r\n        \r\n        map.on('load', function() {\r\n          map.addSource('african-countries', africanCountriesSource);\r\n        \r\n          // Add a layer to display the countries\r\n          map.addLayer({\r\n            id: 'african-countries-layer',\r\n            type: 'fill',\r\n            source: 'african-countries',\r\n            paint: {\r\n              'fill-color': '#0080ff',\r\n              'fill-opacity': 0.5\r\n            }\r\n          });\r\n        });\r\n        map.on('click', function(e) {\r\n          var features = map.queryRenderedFeatures(e.point, {\r\n            layers: ['african-countries-layer']\r\n          });\r\n        \r\n          if (!features.length) {\r\n            return;\r\n          }\r\n        \r\n          var feature = features[0];\r\n          var countryName = feature.properties.name;\r\n          \r\n          // Do something with the country name, e.g. show it in an alert dialog\r\n          alert(countryName);\r\n        });\r\n        \r\n      });\r\n      return (\r\n        <div>\r\n          <div id=\"map\" className=\"map-container\" />\r\n          {latitude && <p>Latitude: {latitude}</p>}\r\n        </div>\r\n      );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}